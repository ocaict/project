{"version":3,"sources":["components/AllList.js","components/Chart.js","components/ExpenseInputs.js","components/ExpenseList.js","components/logo.png","components/Header.js","components/IncomeInputs.js","components/IncomeList.js","components/ToggleButton.js","components/Body.js","App.js","index.js"],"names":["AllList","budgetList","deleteItem","className","map","list","type","title","amount","onClick","id","Chart","totalIncome","totalExpense","chartRef","useRef","useEffect","current","innerHTML","canvas","document","createElement","height","width","appendChild","ctx","getContext","lineWidth","drawCircle","color","ratio","anticlockwise","strokeStyle","beginPath","arc","Math","PI","stroke","income","outcome","clearRect","updateChart","ref","ExpenseInputs","setExpense","expense","setExpenseAmount","expenseAmount","addExpense","editingMode","placeholder","onChange","e","target","value","ExpenseList","editItem","Header","moneySymbol","totalBalance","src","logo","alt","abs","IncomeInputs","setIncome","setIncomeAmount","incomeAmount","addIncome","IncomeList","ToggleButton","expenseShown","showExpenseList","incomeShown","showIncomeList","allShown","showAllList","Body","author","useState","setExpenseShown","setIncomeShown","setAllShown","setTotalIncome","setTotalExpense","setTotalBalance","setMoneySymbol","setEditingMode","updateId","setUpateId","JSON","parse","localStorage","getItem","setBudgetList","filter","li","setItem","stringify","window","confirm","oldBudget","item","find","itemToUpate","otherLists","updatedAt","Date","now","alert","data","addedAt","App","ReactDOM","render","name","getElementById"],"mappings":"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","file":"static/js/main.3fbedb3d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction AllList({ budgetList, deleteItem }) {\r\n    return (\r\n        <>\r\n            <ul className=\"list all-list\">\r\n                {budgetList.map(list => {\r\n                    return <li className={list.type} key={list.id} >{list.title} <p>{list.amount}</p> <div className=\"btn-group\">\r\n                        <button className=\"delete-btn\" onClick={() => deleteItem(list.id)}>&#10005;</button> </div></li>\r\n                })}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AllList","import React, { useRef, useEffect } from 'react'\r\n\r\nfunction Chart({totalIncome, totalExpense}) {\r\n  const chartRef = useRef(null)\r\n  useEffect(() => {\r\nchartRef.current.innerHTML = \"\"\r\nconst canvas = document.createElement(\"canvas\")\r\ncanvas.height = 100\r\ncanvas.width = 100\r\n\r\n\r\nchartRef.current.appendChild(canvas)\r\n\r\n// Draw   On Canvas\r\nconst ctx = canvas.getContext(\"2d\")\r\nctx.lineWidth = 15\r\n\r\n// Circle radius\r\nconst R = 40\r\nconst drawCircle = (color, ratio, anticlockwise)=>{\r\n    ctx.strokeStyle = color\r\n    ctx.beginPath()\r\n    ctx.arc(canvas.width/2, canvas.height/2, R, 0, ratio*2*Math.PI, anticlockwise)\r\n    ctx.stroke()\r\n}\r\n\r\nconst updateChart = (income, outcome) => {\r\n  ctx.clearRect(0,0, canvas.width, canvas.height)\r\n  let ratio = income/(income+outcome)\r\n  drawCircle(\"#fff\", -ratio, true)\r\n  drawCircle(\"#f0624d\", 1-ratio, false)\r\n}\r\n\r\nupdateChart(totalIncome, totalExpense)\r\n\r\n\r\n  }, [totalExpense,totalIncome])\r\n\r\n  \r\n  return (\r\n    <div className='chart-container'>\r\n        <div className=\"income\">\r\n            <h3 className='label'>Income</h3>\r\n            <h3 className='value'>&#8358; {totalIncome}</h3>\r\n        </div>\r\n        <div className=\"chart\" ref={chartRef}></div>\r\n        <div className=\"outcome\">\r\n            <h3 className='label'>Outcome</h3>\r\n            <h3 className='value'>&#8358; {totalExpense}</h3>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart","import React from 'react'\r\n\r\nfunction ExpenseInputs({\r\n    setExpense,\r\n    expense,\r\n    setExpenseAmount,\r\n    expenseAmount,\r\n    addExpense,\r\n    editingMode }) {\r\n    return (\r\n        <>\r\n            <div className=\"expense-input-container\">\r\n                <input type=\"text\" placeholder='Enter Expenses' onChange={(e) => setExpense(e.target.value)} value={expense} />\r\n                <input type=\"number\" placeholder='&#8358; 0' onChange={(e) => setExpenseAmount(e.target.value)} value={expenseAmount} />\r\n                <div className=\"btn add-btn\" onClick={addExpense}>{!editingMode ? <h4>&#10004;</h4> : <h4>&#10000;</h4>}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpenseInputs","import React from 'react'\r\n\r\nfunction ExpenseList({\r\n    budgetList,\r\n    editItem,\r\n    setExpense,\r\n    setExpenseAmount,\r\n    deleteItem}) {\r\n    return (\r\n        <>\r\n            <ul className=\"list expense-list\">\r\n                {budgetList.map(list => {\r\n                    if (list.type === \"expense\") {\r\n                        return <li className={list.type} key={list.id} >{list.title} <p>{list.amount}</p> <div className=\"btn-group\">\r\n                            <button className=\"edit-btn\" onClick={() => editItem(list.id, setExpense, setExpenseAmount)}>&#10000;</button> <button className=\"delete-btn\" onClick={() => deleteItem(list.id)}>&#10005;</button> </div></li>\r\n                    }\r\n                })}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpenseList","export default __webpack_public_path__ + \"static/media/logo.8973de4e.png\";","import React from 'react'\r\nimport logo from \"../components/logo.png\"\r\n\r\nfunction Header({ moneySymbol, totalBalance }) {\r\n  return (\r\n    <>\r\n      <img className='logo' src={logo} alt=\"\" />\r\n      <div className=\"title-container\">\r\n        <h2 className=\"title\"><span>Oca</span>WebTech</h2>\r\n        <h3 className=\"subtitle\">Budget App</h3>\r\n      </div>\r\n\r\n      <div className=\"balance-container\">\r\n        <h2 className='label'>Balance</h2>\r\n        <h2 className='value'>{moneySymbol}{Math.abs(totalBalance)}</h2>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction IncomeInputs({\r\n    income,\r\n    setIncome,\r\n    setIncomeAmount,\r\n    incomeAmount,\r\n    addIncome,\r\n    editingMode }) {\r\n    return (\r\n        <>\r\n            <div className=\"income-input-container\">\r\n                <input type=\"text\" placeholder='Enter Income' onChange={(e) => setIncome(e.target.value)} value={income} />\r\n                <input type=\"number\" placeholder='&#8358; 0' onChange={(e) => setIncomeAmount(e.target.value)} value={incomeAmount} />\r\n                <div className=\"btn add-btn\" onClick={addIncome}>{!editingMode ? <h4>&#10004;</h4> : <h4>&#10000;</h4>}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IncomeInputs","import React from 'react'\r\n\r\nfunction IncomeList({\r\n    budgetList,\r\n    editItem,\r\n    setIncome,\r\n    setIncomeAmount,\r\n    deleteItem }) {\r\n    return (\r\n        <>\r\n            <ul className=\"list income-list\">\r\n                {budgetList.map(list => {\r\n                    if (list.type === \"income\") {\r\n                        return <li className={list.type} key={list.id} >{list.title} <p>{list.amount}</p> <div className=\"btn-group\">\r\n                            <button className=\"edit-btn\" onClick={() => editItem(list.id, setIncome, setIncomeAmount)}>&#10000;</button> <button onClick={() => deleteItem(list.id)} className=\"delete-btn\">&#10005;</button> </div></li>\r\n                    }\r\n                })}\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IncomeList","import React from 'react'\r\n\r\nfunction ToggleButton({\r\n    expenseShown,\r\n    showExpenseList,\r\n    incomeShown,\r\n    showIncomeList,\r\n    allShown,\r\n    showAllList }) {\r\n    return (\r\n        <>\r\n            <div className=\"buttons-container\">\r\n                <div className={expenseShown ? \"expense-btn active\" : \"expense-btn\"} onClick={showExpenseList}>Expenses</div>\r\n                <div className={incomeShown ? \"income-btn active\" : \"income-btn\"} onClick={showIncomeList}>Incomes</div>\r\n                <div className={allShown ? \"all-btn active\" : \"all-btn \"} onClick={showAllList}>All</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToggleButton","/* Oca WebTech  */\r\nimport React, { useEffect, useState } from 'react'\r\nimport AllList from './AllList'\r\nimport Chart from './Chart'\r\nimport ExpenseInputs from './ExpenseInputs'\r\nimport ExpenseList from './ExpenseList'\r\nimport Header from './Header'\r\nimport IncomeInputs from './IncomeInputs'\r\nimport IncomeList from './IncomeList'\r\nimport ToggleButton from './ToggleButton'\r\n\r\nfunction Body({ author }) {\r\n    const [expenseShown, setExpenseShown] = useState(false)\r\n    const [incomeShown, setIncomeShown] = useState(false)\r\n    const [allShown, setAllShown] = useState(true)\r\n    const [expense, setExpense] = useState(\"\")\r\n    const [expenseAmount, setExpenseAmount] = useState(\"\")\r\n    const [income, setIncome] = useState(\"\")\r\n    const [incomeAmount, setIncomeAmount] = useState(\"\")\r\n    const [totalIncome, setTotalIncome] = useState(\"\")\r\n    const [totalExpense, setTotalExpense] = useState(\"\")\r\n    const [totalBalance, setTotalBalance] = useState(\"\")\r\n    const [moneySymbol, setMoneySymbol] = useState(\"\")\r\n    const [editingMode, setEditingMode] = useState(false)\r\n    const [updateId, setUpateId] = useState(\"\")\r\n\r\n    const [budgetList, setBudgetList] = useState(JSON.parse(localStorage.getItem(\"data\")) || [])\r\n\r\n    useEffect(() => {\r\n        let totalIncome = 0\r\n        let totalExpense = 0\r\n        budgetList.filter(list => list.type === \"income\").map(li => {\r\n            totalIncome += +li.amount\r\n        })\r\n        budgetList.filter(list => list.type === \"expense\").map(li => {\r\n            totalExpense += +li.amount\r\n        })\r\n        setTotalIncome(totalIncome)\r\n        setTotalExpense(totalExpense)\r\n        setTotalBalance(totalIncome - totalExpense)\r\n        setMoneySymbol(totalIncome >= totalExpense ? <small>&#8358;</small> : <small>-&#8358;</small>)\r\n        localStorage.setItem(\"data\", JSON.stringify(budgetList))\r\n\r\n    }, [budgetList])\r\n\r\n    const showExpenseList = (e) => {\r\n        setExpenseShown(true)\r\n        setIncomeShown(false)\r\n        setAllShown(false)\r\n        setEditingMode(false)\r\n\r\n    }\r\n    const showIncomeList = (e) => {\r\n        setExpenseShown(false)\r\n        setIncomeShown(true)\r\n        setAllShown(false)\r\n        setEditingMode(false)\r\n\r\n    }\r\n    const showAllList = (e) => {\r\n        setExpenseShown(false)\r\n        setIncomeShown(false)\r\n        setAllShown(true)\r\n        setEditingMode(false)\r\n\r\n    }\r\n\r\n    // Add or update Expense\r\n    const addExpense = () => {\r\n\r\n        // add expense\r\n        if (!editingMode) {\r\n            if (expense && expenseAmount) {\r\n                let data = {\r\n                    id: Date.now(),\r\n                    type: \"expense\",\r\n                    title: expense,\r\n                    amount: expenseAmount,\r\n                    addedAt: Date.now()\r\n                }\r\n                setBudgetList(oldBudget => [data, ...oldBudget])\r\n                setExpense(\"\")\r\n                setExpenseAmount(\"\")\r\n            } else {\r\n                alert(\"Add Expenses details and try again\")\r\n            }\r\n\r\n        } else {\r\n            // Update Item\r\n            if (expense && expenseAmount) {\r\n                let itemToUpate = budgetList.find(list => list.id === updateId)\r\n                let otherLists = budgetList.filter(list => list.id !== updateId)\r\n                setBudgetList([...otherLists, { ...itemToUpate, title: expense, amount: expenseAmount, updatedAt: Date.now() }])\r\n                setEditingMode(false)\r\n                setExpense(\"\")\r\n                setExpenseAmount(\"\")\r\n            } else {\r\n                alert(\"Cannot Update to Empty Details\")\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    // Add  or Update Income\r\n    const addIncome = () => {\r\n\r\n        // add new\r\n        if (!editingMode) {\r\n            if (income && incomeAmount) {\r\n                let data = {\r\n                    id: Date.now(),\r\n                    type: \"income\",\r\n                    title: income,\r\n                    amount: incomeAmount,\r\n                    addedAt: Date.now()\r\n                }\r\n                setBudgetList(oldBudget => [data, ...oldBudget])\r\n                localStorage.setItem(\"data\", JSON.stringify(budgetList))\r\n                setIncome(\"\")\r\n                setIncomeAmount(\"\")\r\n            } else {\r\n                alert(\"Enter the income details and try again\")\r\n            }\r\n\r\n            return\r\n        } else {\r\n            // Update Item\r\n            if (income && incomeAmount) {\r\n                let itemToUpate = budgetList.find(list => list.id === updateId)\r\n                let otherLists = budgetList.filter(list => list.id !== updateId)\r\n                setBudgetList([...otherLists, { ...itemToUpate, title: income, amount: incomeAmount, updatedAt: Date.now() }])\r\n                setEditingMode(false)\r\n                setIncome(\"\")\r\n                setIncomeAmount(\"\")\r\n            } else {\r\n                alert(\"Cannot Update to Empty Details\")\r\n            }\r\n        }\r\n\r\n        let totalIncome = 0\r\n        budgetList.filter(list => list.type === \"income\").map(li => {\r\n            totalIncome += +li.amount\r\n        })\r\n        setTotalIncome(totalIncome)\r\n        setMoneySymbol(totalIncome >= totalExpense ? <small>&#8358;</small> : <small>-&#8358;</small>)\r\n\r\n    }\r\n\r\n    // Delete\r\n    const deleteItem = (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this item?\")) {\r\n            setBudgetList(oldBudget => {\r\n                return budgetList.filter(list => list.id !== id)\r\n            })\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    // Edit Mode\r\n    const editItem = (id, title, amount) => {\r\n        let item = budgetList.find(list => list.id === id)\r\n        title(item.title)\r\n        amount(item.amount)\r\n        setEditingMode(true)\r\n        setUpateId(id)\r\n    }\r\n    return (\r\n        <>\r\n            {/* Header */}\r\n            <div className='header'>\r\n                <Header moneySymbol={moneySymbol} totalBalance={totalBalance} />\r\n                <Chart totalIncome={totalIncome} totalExpense={totalExpense} totalBalance={totalBalance} />\r\n\r\n            </div>\r\n\r\n            <div className='body'>\r\n                <h2>Dashboard</h2>\r\n                <ToggleButton expenseShown={expenseShown}\r\n                    showExpenseList={showExpenseList}\r\n                    incomeShown={incomeShown}\r\n                    showIncomeList={showIncomeList}\r\n                    allShown={allShown}\r\n                    showAllList={showAllList} />\r\n\r\n                {/* List Container */}\r\n                <div className=\"list-container\">\r\n                    {expenseShown && <ExpenseList budgetList={budgetList}\r\n                        editItem={editItem}\r\n                        setExpense={setExpense}\r\n                        setExpenseAmount={setExpenseAmount}\r\n                        deleteItem={deleteItem} />}\r\n\r\n                    {incomeShown && <IncomeList budgetList={budgetList}\r\n                        editItem={editItem}\r\n                        setIncome={setIncome}\r\n                        setIncomeAmount={setIncomeAmount}\r\n                        deleteItem={deleteItem} />}\r\n                    {allShown && <AllList budgetList={budgetList} deleteItem={deleteItem} />}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Footer */}\r\n\r\n            {expenseShown | incomeShown &&\r\n                <div className='footer'>\r\n                    {expenseShown && <ExpenseInputs setExpense={setExpense}\r\n                        expense={expense}\r\n                        setExpenseAmount={setExpenseAmount}\r\n                        expenseAmount={expenseAmount}\r\n                        addExpense={addExpense}\r\n                        editingMode={editingMode} />}\r\n\r\n                    {incomeShown && <IncomeInputs income={income}\r\n                        setIncome={setIncome}\r\n                        setIncomeAmount={setIncomeAmount}\r\n                        incomeAmount={incomeAmount}\r\n                        addIncome={addIncome}\r\n                        editingMode={editingMode} />}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Body","import React from 'react'\nimport \"./App.css\"\nimport Body from './components/Body'\n\nfunction App({ author }) {\n  return (\n    <div className='app'>\n      <Body author={author} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nconst author = { name: \"Oluegwu\" }\n\nReactDOM.render(\n  <>\n    <App author={author} />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}